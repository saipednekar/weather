{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","city","setCity","axios","require","classes","makeStyles","theme","root","margin","spacing","title","fontSize","useStyles","data","setData","data2","setData2","data3","setData3","search","a","console","log","get","then","response","location","current","condition","catch","error","className","precip_in","src","style","height","width","position","top","left","borderRadius","noValidate","autoComplete","TextField","id","variant","onChange","e","target","value","Button","color","onClick","Card","fontWeight","CardContent","Typography","gutterBottom","text","name","temp_c","humidity","feelslike_c","wind_kph","wind_degree","last_updated","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8aeb6982.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useState,useReducer } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { yellow } from '@material-ui/core/colors';\r\n\r\n\r\nconst App=()=> {\r\n    const [city, setCity] = useState(\"\")\r\n    const axios = require('axios');\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                \r\n\r\n              \r\n            },\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n       \r\n        \r\n    }));\r\n    const classes = useStyles();\r\n    const [data, setData] = useState([])\r\n    const [data2, setData2] = useState([])\r\n    const [data3, setData3] = useState([])\r\n\r\n    const  search = async() => {\r\n        console.log(city)\r\n        // Make a request for a user with a given ID\r\n        axios.get(`http://api.weatherapi.com/v1/current.json?key=cd9fd4e263504efaa18152229212606&q=${city}`)\r\n            .then(function (response) {\r\n                // handle success\r\n                console.log(response);\r\n                setData(response.data.location)\r\n                setData2(response.data.current.condition)\r\n                setData3(response.data.current)\r\n\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .then(function () {\r\n                // always executed\r\n            });\r\n    }\r\n   \r\n    \r\n           \r\n      \r\n  \r\n  return (\r\n      <div className=\"App\">\r\n          <div className=\"top\">\r\n              {data3.precip_in<=\"0.098\" ? <div className=\"cloud\">\r\n                  <img src=\"./images/clouds.png\" style={{ height: 150, width: 150 }} />\r\n                  <img src=\"./images/clouds.png\" style={{ height: 150, width: 150 }} />\r\n                  <img src=\"./images/clouds.png\" style={{ height: 150, width: 150 }} />\r\n                  <img src=\"./images/clouds.png\" style={{ height: 150, width: 150 }} />\r\n                  <img src=\"./images/clouds.png\" style={{ height: 150, width: 150 }} />\r\n                  <img src=\"./images/clouds.png\" style={{ height: 150, width: 150 }} />\r\n              </div>\r\n                  : <div className=\"sun\">\r\n                      <img src=\"./images/sun.png\" style={{ height: 100, width: 150 }} />\r\n                      <img src=\"./images/sun.png\" style={{ height: 100, width: 150 }} />\r\n                      <img src=\"./images/sun.png\" style={{ height: 100, width: 150 }} />\r\n                      <img src=\"./images/sun.png\" style={{ height: 100, width: 150 }} />\r\n                      <img src=\"./images/sun.png\" style={{ height: 100, width: 150 }} />\r\n                      <img src=\"./images/sun.png\" style={{ height: 100, width: 150 }} />\r\n                  </div>\r\n              }\r\n              <form className={classes.root} style={{ position: 'absolute', top: 170, left:600,borderRadius:150}} noValidate autoComplete=\"off\">\r\n              \r\n                  <TextField id=\"filled-basic\" className=\"top4\"   variant=\"filled\" onChange={(e)=>setCity(e.target.value) }/>\r\n                      \r\n                  </form>\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={() => search()} className=\"top2\">\r\n                  SEARCH\r\n                 </Button>\r\n         \r\n          {city ? <div>\r\n                  <Card className=\"card\" style={{fontSize:20,fontWeight:'bold'}}>\r\n                     <CardContent>\r\n                          <Typography className={classes.title} style={{ fontSize: 20, fontWeight: 'bold' }} gutterBottom>\r\n                          {data2.text} in {data.name}\r\n                      </Typography>\r\n                          <Typography style={{ fontSize: 50, fontWeight: 'bold' }}>\r\n                          {data3.temp_c} degree Celcius\r\n                      </Typography>\r\n                          <Typography  style={{ fontSize: 20, fontWeight: 'bold' }}>\r\n                          HUMIDITY={data3.humidity}<br />PRECIPITATION={data3.precip_in}inch <br />FEELS LIKE={data3.feelslike_c} Celcius\r\n                      </Typography>\r\n                          <Typography style={{ fontSize: 20, fontWeight: 'bold' }}>\r\n                          WINDSPEED={data3.wind_kph}kph  <br />  WINDDEGREE={data3.wind_degree} DEGREE  <br /> UPDATED {data3.last_updated}\r\n                      </Typography>\r\n                    </CardContent>\r\n              </Card>\r\n              </div>\r\n\r\n          :<text className=\"top3\">PLEASE ENTER YOUR PLACE</text>}\r\n          </div>\r\n  \r\n          \r\n          \r\n        \r\n          </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}